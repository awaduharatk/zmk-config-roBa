#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <10 11>;
        };

        henkan {
            bindings = <&kp LC(SPACE)>;
            key-positions = <13 12>;
            layers = <0>;
        };

        haihun_old {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        under_bar {
            bindings = <&kp UNDER>;
            key-positions = <19 20>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <32 31>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <33 32>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <42 33>;
        };

        next_page {
            bindings = <&kp LC(PAGE_DOWN)>;
            key-positions = <26 25>;
        };

        next_up {
            bindings = <&kp LC(PAGE_UP)>;
            key-positions = <25 24>;
        };

        haihun {
            bindings = <&kp MINUS>;
            key-positions = <9 8>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R  &kp T                                                          &kp Y  &kp U  &lt 5 I    &kp O    &kp P
&mt LCTRL A       &kp S         &kp D         &kp F  &kp G                   &kp LS(LG(S))         &kp RIGHT_SHIFT  &kp H  &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V  &kp B                   &kp LEFT_CONTROL      &kp SEMICOLON    &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &mo 2  &mt LEFT_CONTROL SPACE  &mo 3                 &kp ENTER        &mo 3                             &kp BACKSLASH
            >;

            sensor-bindings =
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>,
                <&inc_dec_kp 0 0>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS             &kp N1  &kp N2  &kp N3  &kp N0                                   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR   &kp CARET
&kp SLASH             &kp N4  &kp N5  &kp N6  &kp PERIOD  &kp K_MUTE        &kp GRAVE  &kp ASTERISK     &kp DOLLAR   &kp AMPERSAND  &kp PERCENT  &kp PERCENT
&mt LEFT_SHIFT EQUAL  &kp N7  &kp N8  &kp N9  &kp PLUS    &kp ASTERISK      &kp EQUAL  &kp PLUS         &kp MINUS    &kp ASTERISK   &kp SLASH    &kp BACKSLASH
&trans                &trans  &trans  &trans  &trans      &trans            &trans     &trans                                                    &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp HOME                 &kp END                                    &kp F5     &none          &kp F2      &kp LPAR  &kp RPAR
&kp LCTRL       &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp PAGE_UP  &trans             &kp LG(V)  &kp F10    &kp BACKSPACE  &kp DELETE  &kp LBKT  &kp RBKT
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &kp PG_DN    &kp LA(SPACE)      &trans     &kp GRAVE  &kp F7         &trans      &kp LBRC  &kp RBRC
&trans          &trans                  &trans          &trans                   &trans       &trans             &trans     &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR_ALL
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &none
            >;
        };
    };
};
